{"version":3,"sources":["userController.js"],"names":["Helper","User","createUser","req","res","password","encryptedPassword","body","newUser","Model","create","firstname","lasttname","othernames","email","phone","userToken","generateToken","id","status","send","data","token","user","error","message","login","getOne","match","compare"],"mappings":";;;;;;AAEA;;;;AACA;;IAAYA,M;;;;;;AAGZ;;;AANA;;AASA,MAAMC,IAAN,CAAW;AACP;;;;;;AAMA,iBAAaC,UAAb,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AAC9B,cAAMC,WAAWL,OAAOM,iBAAP,CAAyBH,IAAII,IAAJ,CAASF,QAAlC,CAAjB;AACA,YAAI;AACA,kBAAMG,UAAU,MAAMC,oBAAMC,MAAN,CAClBP,IAAII,IAAJ,CAASI,SADS,EAElBR,IAAII,IAAJ,CAASK,SAFS,EAGlBT,IAAII,IAAJ,CAASM,UAHS,EAIlBV,IAAII,IAAJ,CAASO,KAJS,EAKlBT,QALkB,EAMlBF,IAAII,IAAJ,CAASQ,KANS,CAAtB;AAQA,kBAAMC,YAAYhB,OAAOiB,aAAP,CAAqBT,QAAQU,EAA7B,CAAlB;AACA,mBAAOd,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,wBAAQ,GADgB;AAExBE,sBAAM,CAAC;AACHC,2BAAON,SADJ;AAEHO,0BAAMf;AAFH,iBAAD;AAFkB,aAArB,CAAP;AAOH,SAjBD,CAiBE,OAAOgB,KAAP,EAAc;AACZ,mBAAOpB,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBK,yBAASD;AADe,aAArB,CAAP;AAGH;AACJ;;AAED;;;;;;AAMA,iBAAaE,KAAb,CAAmBvB,GAAnB,EAAwBC,GAAxB,EAA6B;AACzB,YAAI;AACA,kBAAMmB,OAAO,MAAMd,oBAAMkB,MAAN,CAAaxB,IAAII,IAAJ,CAASO,KAAtB,CAAnB;AACA,kBAAMc,QAAQ,MAAM5B,OAAO6B,OAAP,CAAe1B,IAAII,IAAJ,CAASF,QAAxB,EAAkCkB,KAAKlB,QAAvC,CAApB;AACA,gBAAI,CAACuB,KAAL,EAAY;AACR,uBAAOxB,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEK,SAAS,sBAAX,EAArB,CAAP;AACH;AACD,kBAAMT,YAAYhB,OAAOiB,aAAP,CAAqBM,KAAKL,EAA1B,CAAlB;AACA,mBAAOd,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,wBAAQ,GADgB;AAExBE,sBAAM,CAAC;AACHC,2BAAON,SADJ;AAEH;AACAO,0BAAMA;AAHH,iBAAD;AAFkB,aAArB,CAAP;AAQH,SAfD,CAeE,OAAOC,KAAP,EAAc;AACZ,mBAAOpB,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBK,yBAASD;AADe,aAArB,CAAP;AAGH;AACJ;AA5DM;;kBA+DIvB,I","file":"userController.js","sourceRoot":"C:/Users/user pc/Documents/iReport/server/controller","sourcesContent":["// User controller\r\n\r\nimport Model from '../model/userModel';\r\nimport * as Helper from './helper';\r\n\r\n\r\n/**\r\n * @class User\r\n */\r\nclass User {\r\n    /**\r\n     * @async createUser\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async createUser(req, res) {\r\n        const password = Helper.encryptedPassword(req.body.password);\r\n        try {\r\n            const newUser = await Model.create(\r\n                req.body.firstname,\r\n                req.body.lasttname,\r\n                req.body.othernames,\r\n                req.body.email,\r\n                password,\r\n                req.body.phone,\r\n            );\r\n            const userToken = Helper.generateToken(newUser.id);\r\n            return res.status(201).send({\r\n                status: 201,\r\n                data: [{\r\n                    token: userToken,\r\n                    user: newUser,\r\n                }],\r\n            });\r\n        } catch (error) {\r\n            return res.status(404).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async login\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async login(req, res) {\r\n        try {\r\n            const user = await Model.getOne(req.body.email);\r\n            const match = await Helper.compare(req.body.password, user.password);\r\n            if (!match) {\r\n                return res.status(400).send({ message: 'incorrect crdentials' });\r\n            }\r\n            const userToken = Helper.generateToken(user.id);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: [{\r\n                    token: userToken,\r\n                    // eslint-disable-next-line object-shorthand\r\n                    user: user,\r\n                }],\r\n            });\r\n        } catch (error) {\r\n            return res.status(404).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default User;\r\n"]}