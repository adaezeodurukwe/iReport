{"version":3,"sources":["controller.js"],"names":["Incidents","allIncidents","req","res","records","Model","getAll","status","send","data","error","message","oneIncident","id","parseInt","params","record","getOne","createIncident","body","author","type","location","comment","newRecord","create","modifyIncidentLocation","modifiedRecord","modifyLocation","modifyIncidentComment","modifyComment","deleteIncident","deletedRecord","delete"],"mappings":"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","file":"controller.js","sourceRoot":"C:/Users/user pc/Documents/iReport/server/controller","sourcesContent":["// Controller class\r\n\r\nimport Model from '../model/model';\r\n\r\n/**\r\n * @class Incidents\r\n */\r\nclass Incidents {\r\n    /**\r\n     * @async allIncidents\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object} records\r\n     */\r\n    static async allIncidents(req, res) {\r\n        try {\r\n            const records = await Model.getAll();\r\n            if (!records[0]) {\r\n                return res.status(200).send({\r\n                    status: 200,\r\n                    data: 'no record',\r\n                });\r\n            }\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: records,\r\n            });\r\n        } catch (error) {\r\n            return res.status(404).send({\r\n                status: 404,\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async oneIncident\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object} record\r\n     */\r\n    static async oneIncident(req, res) {\r\n        const id = parseInt(req.params.id, 10);\r\n        try {\r\n            const record = await Model.getOne(id);\r\n            if (record === false) {\r\n                return res.status(404).send({\r\n                    status: 404,\r\n                    data: 'Not found',\r\n                });\r\n            }\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: record,\r\n            });\r\n        } catch (error) {\r\n            return res.status(404).send({\r\n                status: 404,\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @class createIncident\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object} newRecord\r\n     */\r\n    static async createIncident(req, res) {\r\n        if (!req.body.author || !req.body.type || !req.body.location || !req.body.comment) {\r\n            return res.status(400).send({\r\n                message: 'missing field',\r\n            });\r\n        }\r\n        try {\r\n            const newRecord = await Model.create(\r\n                req.body.author,\r\n                req.body.type,\r\n                req.body.location,\r\n                req.body.comment,\r\n            );\r\n            return res.status(201).send({\r\n                status: 201,\r\n                data: [{\r\n                    id: newRecord,\r\n                    message: 'Created red-flag record',\r\n                }],\r\n            });\r\n        } catch (error) {\r\n            return res.status(400).send({\r\n                status: 404,\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async modifyIncidentLocation\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object} modifiedRecord\r\n     */\r\n    static async modifyIncidentLocation(req, res) {\r\n        const id = parseInt(req.params.id, 10);\r\n        try {\r\n            const record = await Model.getOne(id);\r\n            if (record === false) {\r\n                return res.status(404).send({\r\n                    status: 404,\r\n                    message: 'Red-flag not found',\r\n                });\r\n            }\r\n            const modifiedRecord = await Model.modifyLocation(record, req.body.location);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: [{\r\n                    id: modifiedRecord.id,\r\n                    message: 'updated red-flag record\\'s location',\r\n                }],\r\n            });\r\n        } catch (error) {\r\n            return res.status(404).send({\r\n                status: 404,\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async modifyIncidentComment\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object} modifiedRecord\r\n     */\r\n    static async modifyIncidentComment(req, res) {\r\n        const id = parseInt(req.params.id, 10);\r\n        try {\r\n            const record = await Model.getOne(id);\r\n            if (record === false) {\r\n                return res.status(404).send({\r\n                    status: 404,\r\n                    message: 'Red-flag not found',\r\n                });\r\n            }\r\n            const modifiedRecord = await Model.modifyComment(record, req.body.comment);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: [{\r\n                    id: modifiedRecord.id,\r\n                    message: 'updated red-flag record\\'s comment',\r\n                }],\r\n            });\r\n        } catch (error) {\r\n            return res.status(404).send({\r\n                status: 404,\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    static async deleteIncident(req, res) {\r\n        const id = parseInt(req.params.id, 10);\r\n        try {\r\n            const record = await Model.getOne(id);\r\n            if (record === false) {\r\n                return res.status(404).send({\r\n                    status: 404,\r\n                    message: 'Red-flag not found',\r\n                });\r\n            }\r\n            const deletedRecord = await Model.delete(record);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: [{\r\n                    id: deletedRecord.id,\r\n                    message: 'red-flag record has been deleted',\r\n                }],\r\n            });\r\n        } catch (error) {\r\n            return res.status(404).send({\r\n                status: 404,\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Incidents;\r\n"]}