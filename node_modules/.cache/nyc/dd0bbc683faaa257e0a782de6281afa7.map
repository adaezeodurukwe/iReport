{"version":3,"sources":["model.js"],"names":["Model","getAll","incidents","getOne","id","incidentId","record","forEach","incident","create","author","incidentType","incidentLocation","comments","length","newIncident","createdBy","createdOn","format","type","location","status","images","videos","comment","push","modifyLocation","newLocation","modifyComment","newComment","delete","recordIndex","indexOf","splice"],"mappings":";;;;;;AAEA;;;;AACA;;;;;;AAEA;;;AALA;;AAQA,MAAMA,KAAN,CAAY;AACR;;;;AAIA,WAAOC,MAAP,GAAgB;AACZ,eAAOC,kBAAP;AACH;;AAED;;;;;AAKA,WAAOC,MAAP,CAAcC,EAAd,EAAkB;AACd,cAAMC,aAAaD,EAAnB;AACA,YAAIE,SAAS,KAAb;AACAJ,2BAAUK,OAAV,CAAmBC,QAAD,IAAc;AAC5B,gBAAIA,SAASJ,EAAT,KAAgBC,UAApB,EAAgC;AAC5BC,yBAASE,QAAT;AACH;AACD,mBAAOF,MAAP;AACH,SALD;AAMA,eAAOA,MAAP;AACH;;AAED;;;;;;;;AAQA,WAAOG,MAAP,CAAcC,MAAd,EAAsBC,YAAtB,EAAoCC,gBAApC,EAAsDC,QAAtD,EAAgE;AAC5D,cAAMR,aAAaH,mBAAUY,MAAV,GAAmB,CAAtC;AACA,cAAMC,cAAc;AAChBX,gBAAIC,UADY;AAEhBW,uBAAWN,MAFK;AAGhBO,uBAAW,wBAASC,MAAT,CAAgB,YAAhB,CAHK;AAIhBC,kBAAMR,YAJU;AAKhBS,sBAAUR,gBALM;AAMhBS,oBAAQ,OANQ;AAOhBC,oBAAQ,EAPQ;AAQhBC,oBAAQ,EARQ;AAShBC,qBAASX;AATO,SAApB;AAWA,eAAOX,mBAAUuB,IAAV,CAAeV,WAAf,CAAP;AACH;;AAED;;;;;;AAMA,WAAOW,cAAP,CAAsBpB,MAAtB,EAA8BqB,WAA9B,EAA2C;AACvC,cAAMnB,WAAWF,MAAjB;AACA,cAAMc,WAAWO,WAAjB;;AAEAnB,iBAASY,QAAT,GAAoBA,QAApB;;AAEA,eAAOZ,QAAP;AACH;;AAED;;;;;;AAMA,WAAOoB,aAAP,CAAqBtB,MAArB,EAA6BuB,UAA7B,EAAyC;AACrC,cAAMrB,WAAWF,MAAjB;AACA,cAAMkB,UAAUK,UAAhB;;AAEArB,iBAASgB,OAAT,GAAmBA,OAAnB;;AAEA,eAAOhB,QAAP;AACH;;AAED,WAAOsB,MAAP,CAAcxB,MAAd,EAAsB;AAClB,cAAME,WAAWF,MAAjB;AACA,cAAMyB,cAAc7B,mBAAU8B,OAAV,CAAkBxB,QAAlB,CAApB;;AAEAN,2BAAU+B,MAAV,CAAiBF,WAAjB,EAA8B,CAA9B;;AAEA,eAAOvB,QAAP;AACH;AAvFO;;kBA0FGR,K","file":"model.js","sourceRoot":"C:/Users/user pc/Documents/iReport/server/model","sourcesContent":["// Model class\r\n\r\nimport moment from 'moment';\r\nimport incidents from '../db/database';\r\n\r\n/**\r\n * @class Model\r\n */\r\nclass Model {\r\n    /**\r\n     * @static gatAll\r\n     * @returns {object}\r\n     */\r\n    static getAll() {\r\n        return incidents;\r\n    }\r\n\r\n    /**\r\n     * @static getOne\r\n     * @param {*} id\r\n     * @returns {object}\r\n     */\r\n    static getOne(id) {\r\n        const incidentId = id;\r\n        let record = false;\r\n        incidents.forEach((incident) => {\r\n            if (incident.id === incidentId) {\r\n                record = incident;\r\n            }\r\n            return record;\r\n        });\r\n        return record;\r\n    }\r\n\r\n    /**\r\n     * @async create\r\n     * @param {*} author\r\n     * @param {*} incidentType\r\n     * @param {*} incidentLocation\r\n     * @param {*} comments\r\n     * @returns {object} incident\r\n     */\r\n    static create(author, incidentType, incidentLocation, comments) {\r\n        const incidentId = incidents.length + 1;\r\n        const newIncident = {\r\n            id: incidentId,\r\n            createdBy: author,\r\n            createdOn: moment().format('DD/MM/YYYY'),\r\n            type: incidentType,\r\n            location: incidentLocation,\r\n            status: 'draft',\r\n            images: [],\r\n            videos: [],\r\n            comment: comments,\r\n        };\r\n        return incidents.push(newIncident);\r\n    }\r\n\r\n    /**\r\n     * @static modifyLocation\r\n     * @param {*} record\r\n     * @param {*} newLocation\r\n     * @returns {object} incident\r\n     */\r\n    static modifyLocation(record, newLocation) {\r\n        const incident = record;\r\n        const location = newLocation;\r\n\r\n        incident.location = location;\r\n\r\n        return incident;\r\n    }\r\n\r\n    /**\r\n     * @static modifyComment\r\n     * @param {*} record\r\n     * @param {*} newComment\r\n     * @returns {object} incident\r\n     */\r\n    static modifyComment(record, newComment) {\r\n        const incident = record;\r\n        const comment = newComment;\r\n\r\n        incident.comment = comment;\r\n\r\n        return incident;\r\n    }\r\n\r\n    static delete(record) {\r\n        const incident = record;\r\n        const recordIndex = incidents.indexOf(incident);\r\n\r\n        incidents.splice(recordIndex, 1);\r\n\r\n        return incident;\r\n    }\r\n}\r\n\r\nexport default Model;\r\n"]}