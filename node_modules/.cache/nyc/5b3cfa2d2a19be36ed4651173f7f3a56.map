{"version":3,"sources":["redflagController.js"],"names":["Records","createRecord","req","res","newRecord","Model","create","userId","body","type","location","images","videos","comment","status","send","data","id","message","record","error","getAllRedflags","allRecords","getAll","getOneRedflag","oneRedflag","getOne","params","updateRedflagLocation","updateLocation","updateRedflagComment","updateComment","deleteRedflag","delete"],"mappings":"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","file":"redflagController.js","sourceRoot":"C:/Users/user pc/Documents/iReport/server/controller","sourcesContent":["// Records controller\r\n\r\nimport Model from '../model/recordsModel';\r\n\r\nclass Records {\r\n    /**\r\n     * @async createRecord\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async createRecord(req, res) {\r\n        try {\r\n            const newRecord = await Model.create(\r\n                req.userId,\r\n                req.body.type,\r\n                req.body.location,\r\n                req.body.images,\r\n                req.body.videos,\r\n                req.body.comment,\r\n            );\r\n            return res.status(201).send({\r\n                status: 201,\r\n                data: [{\r\n                    id: newRecord.id,\r\n                    message: 'Created red-flag record',\r\n                    record: newRecord,\r\n                },\r\n                ],\r\n            });\r\n        } catch (error) {\r\n            return res.status(500).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async getAllRedflags\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async getAllRedflags(req, res) {\r\n        try {\r\n            const allRecords = await Model.getAll(req.userId);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: allRecords,\r\n            });\r\n        } catch (error) {\r\n            return res.status(500).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async getOneRedflag(req, res) {\r\n        try {\r\n            const oneRedflag = await Model.getOne(req.userId, req.params.id);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                data: oneRedflag,\r\n            });\r\n        } catch (error) {\r\n            return res.status(500).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async updateRedflagLocation\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async updateRedflagLocation(req, res) {\r\n        try {\r\n            const updateLocation = await Model.updateLocation(req.params.id, req.body.location);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                message: 'Updated red-flag record\\'s location',\r\n                data: updateLocation,\r\n            });\r\n        } catch (error) {\r\n            return res.status(500).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async updateRedflagComment\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async updateRedflagComment(req, res) {\r\n        try {\r\n            const updateComment = await Model.updateComment(req.params.id, req.body.comment);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                message: 'Updated red-flag record\\'s comment',\r\n                data: updateComment,\r\n            });\r\n        } catch (error) {\r\n            return res.status(500).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @async deleteRedflag\r\n     * @param {*} req\r\n     * @param {*} res\r\n     * @returns {object}\r\n     */\r\n    static async deleteRedflag(req, res) {\r\n        try {\r\n            const deleteRedflag = await Model.delete(req.userId, req.params.id);\r\n            return res.status(200).send({\r\n                status: 200,\r\n                message: 'red-flag record has been deleted',\r\n                data: deleteRedflag,\r\n            });\r\n        } catch (error) {\r\n            return res.status(500).send({\r\n                message: error,\r\n            });\r\n        }\r\n    }\r\n}\r\nexport default Records;\r\n"]}